# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Install deps
      run: go get 

    - name: Build for Linux AMD64
      run: GOOS=linux GOARCH=amd64 go build -o build/xlite-reverse-proxy_linux-amd64 .

    - name: Build for Linux ARM
      run: GOOS=linux GOARCH=arm64 go build -o build/xlite-reverse-proxy_linux-arm64 .

    - name: Build for Windows AMD64
      run: GOOS=windows GOARCH=amd64 go build -o build/xlite-reverse-proxy_windows-amd64.exe .

    - name: Build for Windows ARM
      run: GOOS=windows GOARCH=arm64 go build -o build/xlite-reverse-proxy_windows-arm64.exe .

    - name: Build for macOS AMD64
      run: GOOS=darwin GOARCH=amd64 go build -o build/xlite-reverse-proxy_macos-amd64 .

    - name: Build for macOS ARM
      run: GOOS=darwin GOARCH=arm64 go build -o build/xlite-reverse-proxy_macos-arm64 .
      
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: artifacts
        path: |
          xlite-reverse-proxy/build/xlite-reverse-proxy_windows-amd64.exe
          xlite-reverse-proxy/build/xlite-reverse-proxy_windows-arm64.exe
          xlite-reverse-proxy/build/xlite-reverse-proxy_linux-amd64
          xlite-reverse-proxy/build/xlite-reverse-proxy_linux-arm64
          xlite-reverse-proxy/build/xlite-reverse-proxy_macos-amd64
          xlite-reverse-proxy/build/xlite-reverse-proxy_macos-arm64
    #   run: go test -v ./...
